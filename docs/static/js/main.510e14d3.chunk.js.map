{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","props","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACQ,sBAAMC,SATO,SAACC,EAAGC,GACrBD,EAAEE,iBACEL,EAAWM,OAAOC,OAAS,IAC3BT,GAAe,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACvCP,EAAc,MAKd,SACI,uBACIQ,KAAK,OACLC,MAAQV,EACRW,SAjBU,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IACtC,OACI,sBAAKc,UAAU,uCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHuB,SAAEA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAC,GACCH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAK1B,CAAEpB,IAEEqB,EDhB2BK,CAAa1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,kCAAd,SAAkDhB,IAEhDoB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADEA,EAAIC,aEgBxBgB,EA9BM,WAEjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,qCACI,oBAAIgC,UAAU,kCAAd,0BACA,cAAC,EAAD,CAAahC,cAAgBA,IAC7B,uBAGA,6BAEQ4C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCjBlC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.510e14d3.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e, props) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats=> [ inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n            <form onSubmit={ handleSubmit }>\r\n                <input\r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                \r\n            </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=dt0WMoiCzWYNyEh4mCFFizFQ8qUJtjOH`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id : img.id,\r\n            title : img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    return (\r\n        <div className=\"card animate_animated animate_fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading  } = useFetchGif( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate_animated animate_fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p>loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key = {img.id}\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGif = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                    \r\n            }\r\n        );\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     const cat = 'Ricky';\r\n    //     setCategories( cats=> [...cats, cat]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"animate_animated animate_fadeIn\">GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category }/>\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}